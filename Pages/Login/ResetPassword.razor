@page "/resetPassword"
@layout LoginLayout
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject Sue3.Web.Blazor.Data.SueApiService SueApiService
@inject Sue3.Web.Blazor.Data.ModelHandlerService ModelHandlerService
@inject IToastService ToastService

<!-- This is the page to submit a new password-->

<div class="row">
    <div class="text-left">
        <img style="height:100vh" src="./Assets/Images/Sue_work_column_transparent.png" />
    </div>
    <div class="col my-auto">
        <div class="text-center" style="margin-left:10vw">
            <img style="width:75%" src="./Assets/Images/analycat-design-76.png" />
            <img style="height:60vh;" src="./Assets/Images/Sue_work_logo_transparent.png" />
        </div>
    </div>
    <div class="col my-auto">
        <EditForm class="text-center" style="margin-right:10vw" Model="@passwordChange" OnValidSubmit="@postChangePassword">
            <div class="form-group">
                <InputText class="sue" @bind-Value="passwordChange.password" placeholder="Password" type="password" />
            </div>
            <div class="form-group">
                <InputText class="sue" @bind-Value="passwordChange.confirmedPassword" @onblur="()=>checkPasswords()" placeholder="Confirm Password" type="password" />
            </div>
            @if (passwordMismatch)
            {
                <span class="validation-message">Passwords do not match</span>
            }
            <div class="form-group">
                <button class="btn btn-primary sue" disabled="@(passwordMismatch)" type="submit">Submit</button>
            </div>
        </EditForm>
    </div>
    <div class="text-right">
        <img style="height:100vh" src="./Assets/Images/Sue_work_column_flipped.jpg" />
    </div>
</div>
@code {
    protected override void OnInitialized()
    {
        SueApiService.LogOut();
    }
    async Task postChangePassword()
    {
        if (checkPasswords()) {
            var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
            var query = uri.Query;
            var token = query.Substring(query.IndexOf('=')+1);
            var opresult = await SueApiService.PostPasswordChange(httpClient, passwordChange.confirmedPassword,token);
            if (opresult.IsError)
            {
                ToastService.ShowError(opresult.Error);
            }
            else
            {
                ToastService.ShowSuccess("Password Changed");
                NavigationManager.NavigateTo("/");
            }
        }
    }
    bool checkPasswords()
    {
        if (passwordChange.password != passwordChange.confirmedPassword)
            passwordMismatch = true;
        else
            passwordMismatch = false;
        StateHasChanged();
        return !passwordMismatch;
    }
    bool passwordMismatch = false;
    PasswordChange passwordChange = new PasswordChange();
    class PasswordChange
    {
        public string password { get; set; }
        public string confirmedPassword { get; set; }
    }
}
